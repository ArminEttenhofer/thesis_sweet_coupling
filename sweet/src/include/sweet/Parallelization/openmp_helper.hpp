/*
 * openmp_helper.hpp
 *
 *  Created on: 20 Jul 2015
 * Author: Martin SCHREIBER <schreiberx@gmail.com>
 */
#ifndef INCLUDE_SWEET_PARALLELIZATION_OPENMP_HELPER_HPP
#define INCLUDE_SWEET_PARALLELIZATION_OPENMP_HELPER_HPP



#if SWEET_THREADING_SPACE
#	include <omp.h>
#endif



/**
 * This is a class to overcome SIMD instruction issues with older GNU compilers
 */

#define OMP_SCHEDULE	schedule(static)

#if !SWEET_THREADING

	#define SWEET_OMP_PARALLEL_FOR_SIMD
	#define SWEET_OMP_PARALLEL_FOR

	#define SWEET_THREADING_SPACE_PARALLEL_FOR
	#define SWEET_THREADING_SPACE_PARALLEL_FOR_SIMD
	#define SWEET_THREADING_SPACE_PARALLEL_FOR_SIMD_REDUCE_SUM(var)
	#define SWEET_THREADING_SPACE_PARALLEL_FOR_SIMD_REDUCE_MAX(var)
	#define SWEET_THREADING_SPACE_PARALLEL_FOR_SIMD_REDUCE_MIN(var)
	#define SWEET_THREADING_SPACE_PARALLEL_FOR_SIMD_REDUCE_SUM2(var1,var2)
	#define SWEET_THREADING_SPACE_PARALLEL_FOR_SIMD_COLLAPSE2

	#define SWEET_THREADING_TIME_PARALLEL_FOR
	#define SWEET_THREADING_TIME_PARALLEL_FOR_SIMD
	#define SWEET_THREADING_TIME_PARALLEL_FOR_SIMD_COLLAPSE2

	#define SWEET_OMP_DECLARE_SIMD

	#define PROC_BIND_CLOSE

#else
	#include <omp.h>

	// PARALLEL FOR
	#define DO_PRAGMA_(x) _Pragma(#x)
	#define DO_PRAGMA(x) DO_PRAGMA_(x)

	#define DO_STR_(x) #x
	#define DO_STR(x) DO_STR_(x)

	#define SWEET_OMP_PARALLEL_FOR _Pragma("omp parallel for")

	// http://gcc.gnu.org/onlinedocs/cpp/Common-Predefined-Macros.html
	#if __GNUC__ >= 7
		#define PROC_BIND_CLOSE proc_bind(close)
	#else
		#define PROC_BIND_CLOSE 
	#endif

	#if SWEET_SIMD_ENABLE
		// SIMD
		#define SWEET_OMP_PARALLEL_FOR_SIMD _Pragma("omp parallel for simd")
		#define SWEET_OMP_PARALLEL_FOR_SIMD_REDUCE_SUM(var) DO_PRAGMA(omp parallel for simd reduction(+:var))
		#define SWEET_OMP_PARALLEL_FOR_SIMD_REDUCE_MAX(var) DO_PRAGMA(omp parallel for simd reduction(max:var))
		#define SWEET_OMP_PARALLEL_FOR_SIMD_REDUCE_MIN(var) DO_PRAGMA(omp parallel for simd reduction(min:var))
		#define SWEET_OMP_PARALLEL_FOR_SIMD_REDUCE_SUM2(var1,var2) DO_PRAGMA(omp parallel for simd reduction(+:var1,var2))
		#define SWEET_OMP_PARALLEL_FOR_SIMD_COLLAPSE2 _Pragma("omp parallel for simd collapse(2)")
	#else
		// no SIMD
		#define SWEET_OMP_PARALLEL_FOR_SIMD _Pragma("omp parallel for")
		#define SWEET_OMP_PARALLEL_FOR_SIMD_REDUCE_SUM(var)
		#define SWEET_OMP_PARALLEL_FOR_SIMD_REDUCE_MAX(var)
		#define SWEET_OMP_PARALLEL_FOR_SIMD_REDUCE_MIN(var)
		#define SWEET_OMP_PARALLEL_FOR_SIMD_REDUCE_SUM2(var)
		#define SWEET_OMP_PARALLEL_FOR_SIMD_COLLAPSE2 _Pragma("omp parallel for collapse(2)")
	#endif

	#if SWEET_THREADING_SPACE
		#define SWEET_OMP_PARALLEL_FOR_SIMD_COLLAPSE2 _Pragma("omp parallel for simd collapse(2)")

		#define SWEET_THREADING_SPACE_PARALLEL_FOR SWEET_OMP_PARALLEL_FOR
		#define SWEET_THREADING_SPACE_PARALLEL_FOR_SIMD SWEET_OMP_PARALLEL_FOR_SIMD
		#define SWEET_THREADING_SPACE_PARALLEL_FOR_SIMD_REDUCE_SUM(var) SWEET_OMP_PARALLEL_FOR_SIMD_REDUCE_SUM(var)
		#define SWEET_THREADING_SPACE_PARALLEL_FOR_SIMD_REDUCE_MAX(var) SWEET_OMP_PARALLEL_FOR_SIMD_REDUCE_MAX(var)
		#define SWEET_THREADING_SPACE_PARALLEL_FOR_SIMD_REDUCE_MIN(var) SWEET_OMP_PARALLEL_FOR_SIMD_REDUCE_MIN(var)
		#define SWEET_THREADING_SPACE_PARALLEL_FOR_SIMD_REDUCE_SUM2(var1,var2) SWEET_OMP_PARALLEL_FOR_SIMD_REDUCE_SUM2(var1,var2)
		#define SWEET_THREADING_SPACE_PARALLEL_FOR_SIMD_COLLAPSE2 SWEET_OMP_PARALLEL_FOR_SIMD_COLLAPSE2
	#else
		#define SWEET_THREADING_SPACE_PARALLEL_FOR
		#define SWEET_THREADING_SPACE_PARALLEL_FOR_SIMD
		#define SWEET_THREADING_SPACE_PARALLEL_FOR_SIMD_REDUCE_SUM(var)
		#define SWEET_THREADING_SPACE_PARALLEL_FOR_SIMD_REDUCE_MAX(var)
		#define SWEET_THREADING_SPACE_PARALLEL_FOR_SIMD_REDUCE_MIN(var)
		#define SWEET_THREADING_SPACE_PARALLEL_FOR_SIMD_REDUCE_SUM2(var1,var2)
		#define SWEET_THREADING_SPACE_PARALLEL_FOR_SIMD_COLLAPSE2
	#endif


	#if SWEET_THREADING_TIME
		#define SWEET_THREADING_TIME_PARALLEL_FOR_SIMD SWEET_OMP_PARALLEL_FOR_SIMD
		#define SWEET_THREADING_TIME_PARALLEL_FOR SWEET_OMP_PARALLEL_FOR
		#define SWEET_THREADING_TIME_PARALLEL_FOR_SIMD_COLLAPSE2 SWEET_OMP_PARALLEL_FOR_SIMD_COLLAPSE2
	#else
		#define SWEET_THREADING_TIME_PARALLEL_FOR_SIMD
		#define SWEET_THREADING_TIME_PARALLEL_FOR
		#define SWEET_THREADING_TIME_PARALLEL_FOR_SIMD_COLLAPSE2 SWEET_OMP_PARALLEL_FOR_SIMD_COLLAPSE2
	#endif

	#define SWEET_OMP_DECLARE_SIMD	_Pragma("omp declare simd")

#endif



#endif
